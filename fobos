[modes]
modes = errors-analysis
        tests-gnu tests-intel
        tests-gnu-debug tests-intel-debug
        euler-gnu-openmp-on euler-intel-openmp-on
        euler-gnu-openmp-off euler-intel-openmp-off


[common-variables]
$CSHARED_GNU     = -cpp -c -fPIC -frealloc-lhs
$CSHARED_INT     = -cpp -c -fpic -assume realloc_lhs
$LSHARED         = -shared
$CSTATIC_GNU     = -cpp -c -frealloc-lhs
$CSTATIC_INT     = -cpp -c -assume realloc_lhs
$DEBUG_GNU       = -O0 -g3 -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -Wuninitialized -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2008 -fall-intrinsics
$DEBUG_INT       = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std08
$OPTIMIZE        = -O2
$EXT_DEPENDS_GNU = ./external/fobos:flap-static-gnu ./external/fobos:pyplot-fortran-static-gnu ./external/fobos:wenoof-static-gnu
$EXT_DEPENDS_INT = ./external/fobos:flap-static-intel ./external/fobos:pyplot-fortran-static-intel ./external/fobos:wenoof-static-intel
$OMP_EXCLUDE     = ./src/tests/euler-1D-openmp/euler-1D-openmp.f90 ./src/tests/euler-1D-openmp/type_euler-1D-openmp.f90

# main modes
[errors-analysis]
help      = build all tests for errors analysis: GNU gfortran, release mode
template  = template-static-gnu
dependon  = $EXT_DEPENDS_GNU
exclude   = $OMP_EXCLUDE

[tests-gnu]
help      = build all tests: GNU gfortran, release mode
template  = template-static-gnu
build_dir = tests
dependon  = $EXT_DEPENDS_GNU
exclude   = $OMP_EXCLUDE

[tests-intel]
help      = build all tests: Intel Fortran, release mode
template  = template-static-intel
build_dir = tests
dependon  = $EXT_DEPENDS_INT
exclude   = $OMP_EXCLUDE

[tests-gnu-debug]
help      = build all tests: GNU gfortran, debug mode
template  = template-static-gnu-debug
build_dir = tests
dependon  = $EXT_DEPENDS_GNU
exclude   = $OMP_EXCLUDE

[tests-intel-debug]
help      = build all tests: Intel Fortran, debug mode
template  = template-static-intel-debug
build_dir = tests
dependon  = $EXT_DEPENDS_INT
exclude   = $OMP_EXCLUDE

[euler-gnu-openmp-on]
help      = build 1D Euler OpenMP: GNU gfortran, parallelization ENABLED
template  = template-static-gnu
openmp    = True
preproc   = -DOPENMP
build_dir = tests-openmp
target    = ./src/tests/euler-1D-openmp/euler-1D-openmp.f90
output    = euler-1D-openmp-on
dependon  = $EXT_DEPENDS_GNU

[euler-intel-openmp-on]
help      = build 1D Euler OpenMP: Intel Fortran, parallelization ENABLED
template  = template-static-intel-debug
openmp    = True
preproc   = -DOPENMP
build_dir = tests-openmp
target    = ./src/tests/euler-1D-openmp/euler-1D-openmp.f90
output    = euler-1D-openmp-on
dependon  = $EXT_DEPENDS_INT

[euler-gnu-openmp-off]
help      = build 1D Euler OpenMP: GNU gfortran, parallelization DISABLED
template  = template-static-gnu
openmp    = False
build_dir = tests-openmp
target    = ./src/tests/euler-1D-openmp/euler-1D-openmp.f90
output    = euler-1D-openmp-off
dependon  = $EXT_DEPENDS_GNU

[euler-intel-openmp-off]
help      = build 1D Euler OpenMP: Intel Fortran, parallelization DISABLED
template  = template-static-intel
openmp    = False
build_dir = tests-openmp
target    = ./src/tests/euler-1D-openmp/euler-1D-openmp.f90
output    = euler-1D-openmp-off
dependon  = $EXT_DEPENDS_INT

# templates
[template-static-gnu]
compiler = gnu
cflags   = $CSTATIC_GNU $OPTIMIZE
lflags   = $OPTIMIZE
mod_dir  = mod
obj_dir  = obj
src      = src/
colors   = True
quiet    = False
log      = True
jobs     = 10

[template-static-gnu-debug]
compiler = gnu
cflags   = $CSTATIC_GNU $DEBUG_GNU
lflags   = $DEBUG_GNU
mod_dir  = mod
obj_dir  = obj
src      = src/
colors   = True
quiet    = False
log      = True
jobs     = 10

[template-shared-gnu]

[template-shared-gnu-debug]

[template-static-intel]
compiler = intel
cflags   = $CSTATIC_INT $OPTIMIZE
lflags   = $OPTIMIZE
mod_dir  = mod
obj_dir  = obj
src      = src/
colors   = True
quiet    = False
log      = True
jobs     = 10

[template-static-intel-debug]
compiler = intel
cflags   = $CSTATIC_INT $DEBUG_INT
lflags   = $DEBUG_INT
mod_dir  = mod
obj_dir  = obj
src      = src/
colors   = True
quiet    = False
log      = True
jobs     = 10

[template-shared-intel]

[template-shared-intel-debug]

# rules
[rule-makedoc]
help   = Rule for building documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford doc/main_page.md
rule_3 = cp -r doc/html/publish/* doc/html/

[rule-makecoverage]
help   = Rule for performing coverage analysis
rule_1 = FoBiS.py clean -mode tests-gnu
rule_2 = FoBiS.py build -mode tests-gnu -coverage
rule_3 = ./tests/burgers -s all
rule_4 = ./tests/euler-1D -s all
rule_5 = ./tests/lorenz -s all
rule_6 = ./tests/oscillation -s all
rule_7 = gcov -o tests/obj/ src/lib/foodie*.f90

[rule-coverage-analysis]
help   = Rule for performing coverage analysis and saving reports in markdown
rule_1 = FoBiS.py clean -mode tests-gnu
rule_2 = FoBiS.py build -mode tests-gnu -coverage
rule_3 = ./tests/burgers -s all
rule_4 = ./tests/euler-1D -s all
rule_5 = ./tests/lorenz -s all
rule_6 = ./tests/oscillation -s all
rule_7 = gcov -o tests/obj/ src/lib/foodie*.f90
rule_8 = FoBiS.py rule -gcov_analyzer wiki/ Coverage-Analysis
rule_9 = rm -f *.gcov

[rule-deldoc]
help = Rule for deleting documentation
rule = rm -rf doc/html/*

[rule-maketar]
help = Rule for making tar archive of the project
rule = tar -czf FOODiE.tar.gz *
