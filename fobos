[modes]
modes = foodie-static-opencoarrays-gnu foodie-static-opencoarrays-gnu-debug
        foodie-static-gnu foodie-static-gnu-debug foodie-shared-gnu foodie-shared-gnu-debug
        foodie-static-intel foodie-static-intel-debug foodie-shared-intel foodie-shared-intel-debug
        foodie-static-gnu-coverage

[common-variables]
$CSHARED_GNU = -cpp -c -fPIC -frealloc-lhs
$CSHARED_INT = -cpp -c -fpic -assume realloc_lhs
$LSHARED     = -shared
$CSTATIC_GNU = -cpp -c -frealloc-lhs
$CSTATIC_INT = -cpp -c -assume realloc_lhs
$DEBUG_GNU   = -O0 -g3 -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -Wuninitialized -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2008 -fall-intrinsics
$DEBUG_INT   = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std08
$OPTIMIZE    = -O2

# main modes
[foodie-static-opencoarrays-gnu]
help            = Build FOODIE library in static release mode with OpenCoarrays-GNU gfortran
compiler        = opencoarrays-gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
lflags          = $OPTIMIZE
preproc         = -DCAF
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-opencoarrays-gnu-debug]
help            = Build FOODIE library in static release mode with OpenCoarrays-GNU gfortran
compiler        = opencoarrays-gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
lflags          = $DEBUG_GNU
preproc         = -DCAF
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-gnu]
help            = Build FOODIE library in static release mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
lflags          = $OPTIMIZE
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-gnu-debug]
help            = Build FOODIE library in static debug mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
lflags          = $DEBUG_GNU
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-shared-gnu]
help            = Build FOODIE library in shared release mode with GNU gfortran
compiler        = gnu
cflags          = $CSHARED_GNU $OPTIMIZE
lflags          = $LSHARED
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.so
mklib           = shared
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-shared-gnu-debug]
help            = Build FOODIE library in shared debug mode with GNU gfortran
compiler        = gnu
cflags          = $CSHARED_GNU $DEBUG_GNU
lflags          = $LSHARED $DEBUG_GNU
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.so
mklib           = shared
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-intel]
help            = Build FOODIE library in static release mode with Intel Fortran
compiler        = intel
cflags          = $CSTATIC_INT $OPTIMIZE
lflags          = $OPTIMIZE
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-intel-debug]
help            = Build FOODIE library in static debug mode with Intel Fortran
compiler        = intel
cflags          = $CSTATIC_INT $DEBUG_INT
lflags          = $DEBUG_INT
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-shared-intel]
help            = Build FOODIE library in shared release mode with Intel Fortran
compiler        = intel
cflags          = $CSHARED_INT $OPTIMIZE
lflags          = $LSHARED
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.so
mklib           = shared
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-shared-intel-debug]
help            = Build FOODIE library in shared debug mode with Intel Fortran
compiler        = intel
cflags          = $CSHARED_INT $DEBUG_INT
lflags          = $LSHARED $DEBUG_INT
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.so
mklib           = shared
colors          = True
quiet           = False
log             = True
jobs            = 10

[foodie-static-gnu-coverage]
help            = Build FOODIE library in static release coverage mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE
lflags          = $OPTIMIZE
coverage        = True
cflags_heritage = True
build_dir       = ./build/lib/
mod_dir         = mod
obj_dir         = obj
src             = src/lib/
target          = foodie.f90
output          = libfoodie.a
mklib           = static
colors          = True
quiet           = False
log             = True
jobs            = 10

# rules
[rule-makedoc]
help   = Rule for building documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford doc/main_page.md
rule_3 = cp -r doc/html/publish/* doc/html/

[rule-makecoverage]
help   = Rule for performing coverage analysis
rule_1 = FoBiS.py build -f src/tests/accuracy/oscillation/fobos -mode gnu-coverage
rule_2 = ./build/tests/accuracy/oscillation/oscillation -s all

[rule-coverage-analysis]
help   = Rule for performing coverage analysis and saving reports in markdown
rule_1 = FoBiS.py build -f src/tests/accuracy/oscillation/fobos -mode gnu-coverage
rule_2 = ./build/tests/accuracy/oscillation/oscillation -s all
rule_3 = gcov -o ./build/lib/obj/ src/lib/foodie*.f90
rule_4 = FoBiS.py rule -gcov_analyzer wiki/ Coverage-Analysis
rule_5 = rm -f *.gcov

[rule-deldoc]
help = Rule for deleting documentation
rule = rm -rf doc/html/*

[rule-maketar]
help = Rule for making tar archive of the project
rule = tar -czf FOODIE.tar.gz *
